#!/usr/bin/ruby

require           'optparse'
require           'rubygems'
gem               'aws-sdk-v1'
require           'aws-sdk-v1'
require           'erb'

EB_CONFIG_APP_SUPPORT = "/opt/elasticbeanstalk/support"
ENVIRONMENT_NAME_FILE = File.join(EB_CONFIG_APP_SUPPORT,'env_name')

# Options Parsing
options = {}
optparse = OptionParser.new do |opts|
  opts.banner = "Usage: #{File.basename($0)} [options]"

	# Define the options, and what they do
	options[:no_update] = false
	opts.on( '--no-update', 'Do not update crontab after making leader' ) do
	 options[:no_update] = true
	end

	# This displays the help screen, all programs are
	# assumed to have this option.
	opts.on( '-h', '--help', 'Display this screen' ) do
	 puts opts
	 exit
	end
end
optparse.parse!

instance_id = `/opt/aws/bin/ec2-metadata -i | awk '{print $2}'`.strip
availability_zone = `/opt/aws/bin/ec2-metadata -z | awk '{print $2}'`.strip
region            =   availability_zone.slice(0..availability_zone.length-2)

AWS.config({:credential_provider => AWS::Core::CredentialProviders::EC2Provider.new,:region => region})
ec2 = AWS::EC2.new
environment_name = ec2.instances[instance_id].tags["elasticbeanstalk:environment-name"]

leader_instances = ec2.instances.to_a.inject([]) do |m, i|
	m << i.id if i.tags["elasticbeanstalk:environment-name"] == environment_name &&
		i.status == :running &&
		i.tags["leader"] == "true"
	m
end

if leader_instances.count < 1
	ec2.instances[instance_id].tags["leader"] = "true"
end

unless options[:no_update]
	`./bin/setup_cron`
end
