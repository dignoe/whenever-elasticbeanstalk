#!/usr/bin/ruby

require           'rubygems'
gem               'aws-sdk'
require           'aws-sdk'
require           'erb'

environment = ENV["RACK_ENV"]
instance_id = if File.exists?("/var/app/containerfiles/instance_id")
	File.read("/var/app/containerfiles/instance_id")
else
	if id = `/opt/aws/bin/ec2-metadata -i | awk '{print $2}'`.strip
		File.open("/var/app/containerfiles/instance_id", 'w') {|f| f.write(id) }
		id
	end
end
availability_zone = `/opt/aws/bin/ec2-metadata -z | awk '{print $2}'`.strip
region            =  availability_zone.slice(0..availability_zone.length-2)

AWS.config({:credential_provider => AWS::Core::CredentialProviders::EC2Provider.new,:region => region})
ec2 = AWS::EC2.new

unless (`echo $PATH`).match("/usr/local/bin")
  `export PATH=/usr/local/bin:$PATH`
end

if ec2.instances[instance_id].tags["leader"] == "true"
	`/usr/local/bin/bundle exec whenever --roles leader --set 'environment=#{environment}&path=/var/app/current' --update-crontab`
else
	`/usr/local/bin/bundle exec whenever --roles non-leader --set 'environment=#{environment}&path=/var/app/current' --update-crontab`
end
